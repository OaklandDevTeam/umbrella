plugins {
    id 'java'
    id "com.github.node-gradle.node" version "2.2.4"
}

apply plugin: "com.github.node-gradle.node"

group 'com.umbr3ll4'
version '1.0-SNAPSHOT'

jar {
    manifest {
        attributes(
                'Main-Class': 'com.umbr3114.Main'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    
    // main REST framework
    implementation "com.sparkjava:spark-core:2.9.1"

    // This also imports Jackson, Jackson-databind, Jackson-annotations
    // and the mongo driver
    implementation group: 'org.mongojack', name: 'mongojack', version: '4.0.0'

    // https://mvnrepository.com/artifact/org.mindrot/jbcrypt
    implementation group: 'org.mindrot', name: 'jbcrypt', version: '0.4'

    // logging
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'

    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.3.3'

}

node {
    version = '12.16.2'
    npmVersion = '6.14.4'
    download = true
    workDir = file("${project.projectDir}/.gradle/nodejs")
    npmWorkDir = file("${project.projectDir}/.gradle/npm")
}

task vueSetup(type: NpmTask, dependsOn: 'npmInstall') {
    workingDir = file("${project.projectDir}/frontend")
    args = ['install', '@vue/cli']
}


task buildWebpack(type: NpmTask, dependsOn: 'vueSetup') {
    workingDir = file("${project.projectDir}/frontend")
    args = ['run', 'build']
}

task cleanNode(type: Delete){
    delete 'src/main/resources/static', 'node_modules', 'frontend/node_modules'
}

processResources.dependsOn buildWebpack

clean.dependsOn cleanNode